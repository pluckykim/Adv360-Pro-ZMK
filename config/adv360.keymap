
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define CONTROL 3

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3     &kp N4    &kp N5      &tog 1                                                                   &mo CONTROL           &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp EQUAL
&kp TAB    &kp Q     &kp W     &kp E      &kp R     &kp T       &kp LA(O)                                                                &none                 &kp Y      &kp U     &kp I      &kp O      &kp P     &kp BSLH
&kp ESC    &kp A     &kp S     &kp D      &kp F     &kp G       &kp GRAVE  &kp PG_DN &kp PG_UP                  &kp LC(T)  &kp LC(RBKT)  &kp RALT              &kp H      &kp J     &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C      &kp V     &kp B       &none      &none     &kp HOME  &none            &none &kp LALT           &none      &none      &kp N      &kp M     &kp COMMA  &kp DOT    &kp FSLH  &kp MINUS
&kp LCTRL  &kp LALT  &kp LALT  &kp LGUI   &mo LOWER &kp BSPC    &kp DEL    &kp END                                    &kp LCTRL          &kp ENTER  &kp SPACE             &mo RAISE &kp LEFT   &kp LBKT   &kp RBKT  &kp RIGHT
            >;
        };

        lower {
            bindings = <
&kp LG(GRAVE)  &kp F1    &kp F2    &kp F3     &kp F4    &kp F5       &kp C_MUTE                                                      &trans                &kp F6              &kp F7    &kp F8     &kp F9      &kp F10   &none
&kp TAB        &kp LC(Q) &kp LC(W) &kp LC(E)  &kp LC(R) &kp LC(T)    &kp C_VOL_DN                                                    &kp C_VOL_UP          &none               &none     &none      &none       &none     &none
&kp ESC        &kp LC(A) &kp LC(S) &kp LC(D)  &kp LC(F) &kp LC(G)    &kp LC(GRAVE) &kp PG_DN &kp PG_UP          &none  &none         &kp RALT              &kp LEFT            &kp DOWN  &kp UP     &kp RIGHT   &none     &none
&kp LSHFT      &kp LC(Z) &kp LC(X) &kp LC(C)  &kp LC(V) &kp LC(B)    &none         &none     &kp HOME  &none    &none &kp LALT       &none      &none      &kp LC(LS(TAB))     &none     &none      &kp LC(TAB) &none     &none
&kp LCTRL      &kp LALT  &kp LALT  &kp LGUI   &trans    &kp BSPC     &kp DEL       &kp END                            &kp LCTRL      &kp ENTER  &kp SPACE                      &trans    &kp HOME   &none       &none     &kp END
            >;
        };

        raise {
            bindings = <
&none              &kp F11            &kp F12                      &kp F13             &kp F14                 &kp F15          &kp C_PP                                                                             &trans                &none                &none     &macro_screen_prev      &macro_screen_next        &none     &none
&macro_screen_tab  &kp LC(LA(BSPC))   &kp LC(LA(Y))                &kp LC(LA(K))       &kp LC(LA(O))           &none            &kp C_PREV                                                                           &kp C_NEXT            &none                &none     &none                   &none                     &none     &none
&none              &kp LC(LA(N))      &kp LC(LA(H))                &kp LC(LA(ENTER))   &kp LC(LA(L))           &kp LC(LA(M))    &none      &kp PG_DN &kp PG_UP                                  &none &none          &kp RALT              &kp LEFT             &kp DOWN  &kp UP                  &kp RIGHT                 &none     &macro_screen_list
&none              &none              &macro_screen_close_region   &kp LC(LA(J))       &macro_screen_vertical  &none            &none      &none     &kp HOME  &none                            &none &kp LALT       &none      &none      &kp LC(LS(TAB))      &none     &none                   &kp LC(TAB)               &none     &none
&none              &none              &none                        &none               &trans                  &kp BSPC         &kp DEL    &kp END                                                    &kp LCTRL      &kp ENTER  &kp SPACE                       &trans    &kp HOME                &macro_screen_copy        &none  &kp END
            >;
        };

        control {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
